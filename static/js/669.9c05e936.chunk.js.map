{"version":3,"file":"static/js/669.9c05e936.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","../node_modules/@mui/icons-material/esm/Person.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 15px;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px solid #000000;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  min-height: 20px;\n  border: 1px solid #c4c4c4;\n  border-radius: 3px;\n`;\n\nexport const SubmitButton = styled.button`\n  width: 120px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  margin-top: 10px;\n  border: 1px solid #c4c4c4;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: transparent;\n  transition: background-color 0.5s ease;\n\n  &:hover,\n  &:focus {\n    background-color: #1f1fac;\n    color: #ffffff;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { TextField } from '@mui/material';\nimport { Form, SubmitButton } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    const setStateFunc = name === 'name' ? setName : setNumber;\n    setStateFunc(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const isInContacts = contacts.find(\n      item => item.name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      return toast.warn(`${contact.name} is already in contact list!`);\n    }\n\n    dispatch(addContact(contact));\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <TextField\n        id=\"outlined-name\"\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleInputChange}\n        value={name}\n      />\n      <TextField\n        id=\"outlined-number\"\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleInputChange}\n        value={number}\n      />\n\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </Form>\n  );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import styled, { keyframes } from 'styled-components';\nimport { Box } from '@mui/material';\nimport { Person } from '@mui/icons-material';\n\nexport const StyledContactInfoIcon = styled(Person)`\n  margin-right: 10px;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const List = styled.ul`\n  padding-left: 30px;\n`;\n\nexport const Item = styled.li`\n  width: 500px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 17px;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Text = styled.p`\n  display: inline-block;\n  min-width: 300px;\n`;\n\nexport const Button = styled.button`\n  width: 70px;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  margin-left: 10px;\n  border: 1px solid #c4c4c4;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: transparent;\n  transition: background-color 0.5s ease;\n\n  &:hover,\n  &:focus {\n    background-color: #c4c4c4;\n  }\n`;\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spinner = styled.div`\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-top-color: #333;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  margin-bottom: 20px;\n  margin-left: 70px;\n\n  animation: ${spin} 1s ease-in-out infinite;\n`;\n\nexport const ContactListContainer = styled(Box)({\n  width: '100%',\n  maxWidth: 600,\n  backgroundColor: '#FFFFFF',\n});\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  cursor: pointer;\n  border-bottom: 1px solid gray;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n// import { GrContactInfo } from 'react-icons/gr';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/selectors';\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport {\n  Text,\n  Spinner,\n  ContactListContainer,\n  ContactListItem,\n  StyledContactInfoIcon,\n  StyledDiv,\n} from './ContactList.styled';\nimport { Button, List } from '@mui/material';\n\nexport default function ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <StyledDiv>\n      {isLoading && <Spinner />}\n      {!filteredContacts?.length && !error && !isLoading && (\n        <Text>No contacts found.</Text>\n      )}\n      {error && <Text>{error}</Text>}\n      <ContactListContainer>\n        <List aria-label=\"Contacts list\">\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id}>\n              <StyledContactInfoIcon size={20} />\n              <Text>\n                {name}: {number}\n              </Text>\n              <Button\n                variant=\"contained\"\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </Button>\n            </ContactListItem>\n          ))}\n        </List>\n      </ContactListContainer>\n    </StyledDiv>\n  );\n}\n","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 180px;\n  min-height: 18px;\n  border: 1px solid #c4c4c4;\n  border-radius: 3px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 50px;\n  margin-top: 50px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  && {\n    width: 40%;\n  }\n`;\n","import { StyledTextField, Wrapper } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Wrapper>\n      <StyledTextField\n        size=\"small\"\n        id=\"outlined-filter\"\n        label=\"Find a contact 🔍\"\n        type=\"text\"\n        value={filter}\n        onChange={event => dispatch(setFilter(event.target.value.trim()))}\n      />\n    </Wrapper>\n  );\n}\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  return (\n    <>\n      <h1 style={{ textAlign: 'center', paddingTop: 30, marginBottom: 30 }}>\n        Phonebook\n      </h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Form","styled","SubmitButton","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleInputChange","event","target","value","formReset","onSubmit","preventDefault","contact","find","item","toLowerCase","toast","addContact","TextField","label","type","pattern","title","required","onChange","createSvgIcon","_jsx","d","StyledContactInfoIcon","Person","StyledDiv","Text","spin","keyframes","Spinner","ContactListContainer","Box","width","maxWidth","backgroundColor","ContactListItem","ContactList","filteredContacts","selectFilteredContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","length","map","variant","onClick","deleteContact","onDeleteContact","Wrapper","StyledTextField","Filter","filter","selectFilter","setFilter","trim","Contacts","style","textAlign","paddingTop","marginBottom"],"sourceRoot":""}